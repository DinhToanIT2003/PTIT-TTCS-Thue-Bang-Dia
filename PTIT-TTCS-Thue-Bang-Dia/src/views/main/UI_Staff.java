/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.main;

import Helper.CustomUUID;
import Helper.RandomCodeGenerator;
import control.BlankValueException;
import control.InvalidIDException;
import control.LoginService;
import control.PayService;
import control.RentService;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.Disk;
import model.Payment;
import model.RentDetails;


/**
 *
 * @author vduct
 */
public class UI_Staff extends javax.swing.JFrame {
    
    Color lightBlue = new Color(204,204,255);
    
    private int countAffCol = 0;
    private String idThue;
    private RentService rentService = new RentService();
    private List<Disk> disks = new ArrayList<Disk>();
    private DefaultTableModel defTabMod = new DefaultTableModel();
    
    private LoginService login;
    private RandomCodeGenerator uID; 
    private RentDetails rentDt;
    private List<RentDetails> rentDtls = new ArrayList<RentDetails>();
    private List<Payment> pms = new ArrayList<Payment>();
    private PayService payService = null;
    
    private List<Customer> customers = null;
    
    /**
     * Creates new form UI_Staff
     */
    public UI_Staff() {
        initComponents();
        
        
        pnlThue.setVisible(false);
        
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgThue = new javax.swing.JDialog();
        pnlThue_Them1 = new javax.swing.JPanel();
        lblThue_MAKH = new javax.swing.JLabel();
        lblThue_MaDia1 = new javax.swing.JLabel();
        lblThue_SoLuong1 = new javax.swing.JLabel();
        lblThue_NgayTra1 = new javax.swing.JLabel();
        txtThue_MaKH = new javax.swing.JTextField();
        txtThue_MaDia = new javax.swing.JTextField();
        txtThue_SoLuong = new javax.swing.JTextField();
        txtThue_NgayTra = new javax.swing.JTextField();
        btnThue_Luu = new javax.swing.JButton();
        btnThue_Huy = new javax.swing.JButton();
        dlgTra = new javax.swing.JDialog();
        pnlTra_Them = new javax.swing.JPanel();
        btnOkTra = new javax.swing.JButton();
        txtTra_ID = new javax.swing.JTextField();
        txtTra_PhuPhi = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlLayoutSize = new javax.swing.JPanel();
        pnlNavigationBar = new javax.swing.JPanel();
        pnlLogo = new javax.swing.JPanel();
        lblCD = new javax.swing.JLabel();
        sprtCD = new javax.swing.JSeparator();
        pnlMenu = new javax.swing.JPanel();
        tabThue = new javax.swing.JPanel();
        lblThue = new javax.swing.JLabel();
        tabTra = new javax.swing.JPanel();
        lblTra = new javax.swing.JLabel();
        pnlContent = new javax.swing.JPanel();
        pnlThue = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThue = new javax.swing.JTable();
        pnlThueProcess = new javax.swing.JPanel();
        txtTimKiemThue = new javax.swing.JTextField();
        btnTimKiemThue = new javax.swing.JButton();
        btnThue = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnRstThue = new javax.swing.JButton();
        txtThongBaoThue = new javax.swing.JLabel();
        pnlTra = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtTKTra = new javax.swing.JTextField();
        btnTK = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        btnTra = new javax.swing.JButton();
        btnResetTra = new javax.swing.JButton();
        txtThongBaoTra = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTra = new javax.swing.JTable();

        dlgThue.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dlgThue.setTitle("Phiếu thuê");
        dlgThue.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        dlgThue.setResizable(false);
        dlgThue.setSize(new java.awt.Dimension(377, 300));

        pnlThue_Them1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlThue_Them1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblThue_MAKH.setText("Mã khách hàng:");
        pnlThue_Them1.add(lblThue_MAKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 90, -1));

        lblThue_MaDia1.setText("Mã đĩa:");
        pnlThue_Them1.add(lblThue_MaDia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 80, -1));

        lblThue_SoLuong1.setText("Số lượng:");
        pnlThue_Them1.add(lblThue_SoLuong1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 90, -1));

        lblThue_NgayTra1.setText("Ngày trả:");
        pnlThue_Them1.add(lblThue_NgayTra1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 80, -1));
        pnlThue_Them1.add(txtThue_MaKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 47, 149, -1));
        pnlThue_Them1.add(txtThue_MaDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 87, 149, -1));
        pnlThue_Them1.add(txtThue_SoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 148, -1));
        pnlThue_Them1.add(txtThue_NgayTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 178, 148, -1));

        btnThue_Luu.setText("Save");
        btnThue_Luu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThue_LuuMouseClicked(evt);
            }
        });
        pnlThue_Them1.add(btnThue_Luu, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 218, -1, -1));

        btnThue_Huy.setText("Cancel");
        btnThue_Huy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThue_HuyMouseClicked(evt);
            }
        });
        pnlThue_Them1.add(btnThue_Huy, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 218, -1, -1));

        dlgThue.getContentPane().add(pnlThue_Them1, java.awt.BorderLayout.CENTER);

        dlgTra.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dlgTra.setBackground(new java.awt.Color(255, 255, 255));
        dlgTra.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        dlgTra.setResizable(false);
        dlgTra.setSize(new java.awt.Dimension(400, 217));

        pnlTra_Them.setBackground(new java.awt.Color(255, 255, 255));

        btnOkTra.setText("OK");
        btnOkTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOkTraMouseClicked(evt);
            }
        });

        jLabel1.setText("Mã phiếu thuê:");

        jLabel2.setText("Phụ phí:");

        javax.swing.GroupLayout pnlTra_ThemLayout = new javax.swing.GroupLayout(pnlTra_Them);
        pnlTra_Them.setLayout(pnlTra_ThemLayout);
        pnlTra_ThemLayout.setHorizontalGroup(
            pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTra_ThemLayout.createSequentialGroup()
                .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlTra_ThemLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTra_PhuPhi, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(txtTra_ID)))
                    .addGroup(pnlTra_ThemLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOkTra)))
                .addGap(78, 78, 78))
        );
        pnlTra_ThemLayout.setVerticalGroup(
            pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTra_ThemLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTra_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTra_PhuPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnOkTra)
                .addGap(32, 32, 32))
        );

        dlgTra.getContentPane().add(pnlTra_Them, java.awt.BorderLayout.LINE_START);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("STAFF");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        pnlLayoutSize.setBackground(new java.awt.Color(102, 102, 255));

        pnlNavigationBar.setBackground(new java.awt.Color(102, 102, 255));
        pnlNavigationBar.setPreferredSize(new java.awt.Dimension(270, 500));
        pnlNavigationBar.setLayout(new java.awt.BorderLayout());

        pnlLogo.setBackground(new java.awt.Color(102, 102, 255));

        lblCD.setFont(new java.awt.Font("Script MT Bold", 3, 48)); // NOI18N
        lblCD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCD.setText("CD");

        sprtCD.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlLogoLayout = new javax.swing.GroupLayout(pnlLogo);
        pnlLogo.setLayout(pnlLogoLayout);
        pnlLogoLayout.setHorizontalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogoLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCD, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sprtCD, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLogoLayout.setVerticalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sprtCD, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCD, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pnlNavigationBar.add(pnlLogo, java.awt.BorderLayout.PAGE_START);

        pnlMenu.setBackground(new java.awt.Color(102, 102, 255));
        pnlMenu.setMaximumSize(new java.awt.Dimension(282, 392));
        pnlMenu.setName(""); // NOI18N
        pnlMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabThue.setBackground(new java.awt.Color(204, 204, 255));
        tabThue.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabThue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabThueMouseClicked(evt);
            }
        });

        lblThue.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblThue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThue.setText("Thuê sản phẩm");
        lblThue.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout tabThueLayout = new javax.swing.GroupLayout(tabThue);
        tabThue.setLayout(tabThueLayout);
        tabThueLayout.setHorizontalGroup(
            tabThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThue, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        tabThueLayout.setVerticalGroup(
            tabThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThue, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMenu.add(tabThue, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        tabTra.setBackground(new java.awt.Color(204, 204, 255));
        tabTra.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabTraMouseClicked(evt);
            }
        });

        lblTra.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTra.setText("Trả sản phẩm");
        lblTra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout tabTraLayout = new javax.swing.GroupLayout(tabTra);
        tabTra.setLayout(tabTraLayout);
        tabTraLayout.setHorizontalGroup(
            tabTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTra, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabTraLayout.setVerticalGroup(
            tabTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTra, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMenu.add(tabTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 91, -1, -1));

        pnlNavigationBar.add(pnlMenu, java.awt.BorderLayout.LINE_END);

        pnlContent.setBackground(new java.awt.Color(204, 204, 255));
        pnlContent.setOpaque(false);
        pnlContent.setLayout(new java.awt.CardLayout());

        pnlThue.setBackground(new java.awt.Color(255, 255, 255));

        tblThue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblThue);

        pnlThueProcess.setBackground(new java.awt.Color(255, 255, 255));

        btnTimKiemThue.setText("Tìm Kiếm");
        btnTimKiemThue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiemThueMouseClicked(evt);
            }
        });

        btnThue.setText("Thuê");
        btnThue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThueMouseClicked(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(51, 0, 51));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnRstThue.setText("Reset");
        btnRstThue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRstThueActionPerformed(evt);
            }
        });

        txtThongBaoThue.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout pnlThueProcessLayout = new javax.swing.GroupLayout(pnlThueProcess);
        pnlThueProcess.setLayout(pnlThueProcessLayout);
        pnlThueProcessLayout.setHorizontalGroup(
            pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThueProcessLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiemThue, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiemThue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThueProcessLayout.createSequentialGroup()
                        .addComponent(txtThongBaoThue, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlThueProcessLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRstThue)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlThueProcessLayout.setVerticalGroup(
            pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThueProcessLayout.createSequentialGroup()
                .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThue)
                            .addComponent(btnRstThue))
                        .addGroup(pnlThueProcessLayout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTimKiemThue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnTimKiemThue))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThongBaoThue)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlThueLayout = new javax.swing.GroupLayout(pnlThue);
        pnlThue.setLayout(pnlThueLayout);
        pnlThueLayout.setHorizontalGroup(
            pnlThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlThueProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );
        pnlThueLayout.setVerticalGroup(
            pnlThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThueLayout.createSequentialGroup()
                .addComponent(pnlThueProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))
        );

        pnlContent.add(pnlThue, "card2");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnTK.setText("Tìm kiếm");
        btnTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTKMouseClicked(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnTra.setText("Trả");
        btnTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTraMouseClicked(evt);
            }
        });

        btnResetTra.setText("Reset");
        btnResetTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetTraMouseClicked(evt);
            }
        });

        txtThongBaoTra.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtThongBaoTra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTKTra, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTK, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTra, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResetTra)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTKTra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnResetTra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThongBaoTra)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        tblTra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblTra);

        javax.swing.GroupLayout pnlTraLayout = new javax.swing.GroupLayout(pnlTra);
        pnlTra.setLayout(pnlTraLayout);
        pnlTraLayout.setHorizontalGroup(
            pnlTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        pnlTraLayout.setVerticalGroup(
            pnlTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTraLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlContent.add(pnlTra, "card3");

        javax.swing.GroupLayout pnlLayoutSizeLayout = new javax.swing.GroupLayout(pnlLayoutSize);
        pnlLayoutSize.setLayout(pnlLayoutSizeLayout);
        pnlLayoutSizeLayout.setHorizontalGroup(
            pnlLayoutSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayoutSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlNavigationBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        pnlLayoutSizeLayout.setVerticalGroup(
            pnlLayoutSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlNavigationBar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(pnlContent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
        );

        pnlNavigationBar.getAccessibleContext().setAccessibleName("Menu");

        getContentPane().add(pnlLayoutSize, java.awt.BorderLayout.CENTER);
        pnlLayoutSize.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabThueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabThueMouseClicked
        pnlThue.setVisible(true);
        pnlTra.setVisible(false);
        tabThue.setBackground(Color.white);
        tabTra.setBackground(lightBlue);
        this.defTabMod.setColumnCount(0);
        this.defTabMod.setRowCount(0);
        showThongTinThue();
    }//GEN-LAST:event_tabThueMouseClicked

    private void tabTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabTraMouseClicked
        pnlTra.setVisible(true);
        pnlThue.setVisible(false);
        tabTra.setBackground(Color.white);        
        tabThue.setBackground(lightBlue);
        this.defTabMod.setColumnCount(0);
        this.defTabMod.setRowCount(0);
        showThongTinTra();
    }//GEN-LAST:event_tabTraMouseClicked

    private void btnThueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThueMouseClicked
        this.dlgThue.setLocationRelativeTo(this);
        this.dlgThue.setVisible(true);
        
    }//GEN-LAST:event_btnThueMouseClicked

    private void btnThue_HuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThue_HuyMouseClicked
        this.dlgThue.dispose();
    }//GEN-LAST:event_btnThue_HuyMouseClicked

    private void btnTimKiemThueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemThueMouseClicked
        this.txtThongBaoThue.setText("");
        this.showTKDiskInfo(txtTimKiemThue.getText());
    }//GEN-LAST:event_btnTimKiemThueMouseClicked

    private void btnRstThueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRstThueActionPerformed
        resetTableThue();        
    }//GEN-LAST:event_btnRstThueActionPerformed

    private void btnThue_LuuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThue_LuuMouseClicked
        getRentForm();
        txtThongBaoThue.setText("Số dòng bị ảnh hưởng trên Csdl là "+ this.countAffCol + " !");
    }//GEN-LAST:event_btnThue_LuuMouseClicked

    private void btnTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTKMouseClicked
        this.txtThongBaoTra.setText("");
        this.showTKRentInfo(this.txtTKTra.getText());
    }//GEN-LAST:event_btnTKMouseClicked

    private void btnResetTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetTraMouseClicked
        resetTableTra();
    }//GEN-LAST:event_btnResetTraMouseClicked

    private void btnTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTraMouseClicked
        this.dlgTra.setLocationRelativeTo(this);
        this.dlgTra.setVisible(true);
    }//GEN-LAST:event_btnTraMouseClicked

    private void btnOkTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOkTraMouseClicked
        getPhieuTra();
        txtThongBaoTra.setText("Số dòng bị ảnh hưởng trên Csdl là "+ this.countAffCol + " !");
    }//GEN-LAST:event_btnOkTraMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI_Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI_Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI_Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI_Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI_Staff().setVisible(true);
            }
        });
    }
    /**HIỆN BẢNG DANH SÁCH ĐĨA SẴN SÀNG
     * @params NONE
    */
    public void showThongTinThue(){
        
        this.tblThue.setModel(defTabMod);
        
        this.disks = this.rentService.getAllDisk();
        
        defTabMod.addColumn("Mã đĩa");
        defTabMod.addColumn("Tên đĩa");
        defTabMod.addColumn("Loại");
        defTabMod.addColumn("Số lượng");
        defTabMod.addColumn("Giá thuê");
        
        for(Disk disk : disks){
            defTabMod.addRow(new Object[] {
                disk.getMa(), disk.getTen(), disk.getLoai(), disk.getSoluong(), disk.getGia()
            });
        }
        
    }
    
    /**HIỆN THÔNG TIN ĐĨA TÌM KIẾM
     * @params String 
    */
    public void showTKDiskInfo(String tenDia){
        this.defTabMod.setRowCount(0);
        boolean flag = false;
//        boolean checkLogic;
//        String tmp;
        
        //Kiểm tra tên đĩa có tồn tại không
        for(Disk disk : this.disks){
//            tmp = disk.getTen();
//            checkLogic = disk.getTen().trim().equals(tenDia);

            //Nếu có thì hiện hàng thông tin đĩa đó ra
            if(disk.getTen().trim().equals(tenDia)){                
                defTabMod.addRow(new Object[] {
                disk.getMa(), disk.getTen(), disk.getLoai(), disk.getSoluong(), disk.getGia()
                });
                flag = true;
            }
        }
        //không tìm được thì thông báo cho người dùng 
        if(flag == false) this.txtThongBaoThue.setText("Không có đĩa nào hợp lệ!");
    }
    
    /**NHẬP PHIẾU THUÊ
     * @params NONE
    */
    public void getRentForm(){
        boolean flag = true;
        rentDt = new RentDetails();
        customers = new ArrayList<Customer>(); //Để check có viết sai mã khách hàng không
        this.customers = this.rentService.getAllCust();
        this.uID = new RandomCodeGenerator();
        
        try{
            //Kiểm tra các trường có bị trống không
            if(txtThue_MaKH.getText().equals("") || txtThue_MaDia.getText().equals("") || txtThue_SoLuong.getText().equals("") || 
                    txtThue_NgayTra.getText().equals("")){
                throw new BlankValueException("Thiếu thông tin!");
            }
            
            //Kiểm tra mã id thuê sinh ra có trùng không và tạo mới mã nếu trùng 
            this.rentDtls = this.rentService.getAllRent();
            do{
                this.idThue = this.uID.generateCode();
                

                for(RentDetails rent : rentDtls){
                    if(rent.getId().equals(idThue)){
                        flag = false;
                    }else{
                        flag = true;
                    }
                }
               
            }while(flag == false);
            
            this.rentDtls.clear();
            
//            if(flag == true){
//              rentDt.setId(idThue);  
//            }
            
            //lấy dữ liệu vào rent details
            rentDt.setMadia(txtThue_MaDia.getText());            
            rentDt.setSlThue(Integer.parseInt(this.txtThue_SoLuong.getText()));
            rentDt.setNgayTra(this.txtThue_NgayTra.getText());
            
                //kiểm tra xem mã khách hàng nhập vào có tồn tại không
                if(!this.rentService.chkIDCustomer(this.txtThue_MaKH.getText(), customers)){
                    flag = false;
                    throw new InvalidIDException("Không tìm thấy khách hàng!");
                }
                //Nếu có thì thêm mã khách hàng
                rentDt.setMaKh(this.txtThue_MaKH.getText());
                this.customers.clear();
        }catch(BlankValueException e){
            JOptionPane.showMessageDialog(this, e.toString());
        }catch(InvalidIDException e){
            JOptionPane.showMessageDialog(this, e.toString());
        }
        
        //Dòng này để xử lý khi người dùng nhập sai hay thiếu giá trị sẽ giữ nguyên dialog thuê nếu đúng hết sẽ hỏi lại người dùng có chắc chắn không và đòng dialog, cập nhật bảng đĩa.
        if(txtThue_MaKH.getText().equals("") || txtThue_MaDia.getText().equals("") || txtThue_SoLuong.getText().equals("") || 
                    txtThue_NgayTra.getText().equals("") || flag == false){
            this.txtThongBaoThue.setText("");
        }else{
            int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to save this change?");
            if(x == JOptionPane.YES_OPTION){
                this.countAffCol = this.rentService.insertRent(rentDt, LoginService.getId(), idThue);
            }
            this.dlgThue.dispose();
            setTableThue();
        }
      
    }
    
    /**reset table thuê
     * @param 
     * @return 
     */
    public void resetTableThue(){
        this.defTabMod.setRowCount(0);
//        this.txtThongBao.setText("");
        for(Disk disk : disks){
            defTabMod.addRow(new Object[] {
                disk.getMa(), disk.getTen(), disk.getLoai(), disk.getSoluong(), disk.getGia()
            });
        }
    }
    
    public void setTableThue(){
        this.defTabMod.setRowCount(0);
        this.disks = this.rentService.getAllDisk();
        for(Disk disk : disks){
            defTabMod.addRow(new Object[] {
                disk.getMa(), disk.getTen(), disk.getLoai(), disk.getSoluong(), disk.getGia()
            });
        }
    }
    
    
    /**Hiện bảng danh sách phiếu thuê
     * @param 
     */
    public void showThongTinTra(){
        
        this.tblTra.setModel(defTabMod);
        
        this.rentDtls = this.rentService.getAllRentNotPay();
        
        defTabMod.addColumn("Mã phiếu thuê");
        defTabMod.addColumn("Mã đĩa");
        defTabMod.addColumn("Mã khách hàng");
        defTabMod.addColumn("Số lượng thuê");
        defTabMod.addColumn("Giá thuê");
        defTabMod.addColumn("Ngày thuê");
        defTabMod.addColumn("Ngày trả");
        
        for(RentDetails rent : this.rentDtls){
            defTabMod.addRow(new Object[] {
                rent.getId(), rent.getMadia(), rent.getMaKh(), rent.getSlThue(), rent.getGia(), rent.getNgayThue(), rent.getNgayTra()
            });
        }
        this.rentDtls.clear();
    }
    
    /**HIỆN THÔNG TIN PHIẾU THUÊ CẦN TÌM
     * @params String 
    */
    public void showTKRentInfo(String makh){
        this.defTabMod.setRowCount(0);
        boolean flag = false;
        this.rentDtls = this.rentService.getAllRentNotPay();
        
        //Kiểm tra tên đĩa có tồn tại không
        for(RentDetails rent : this.rentDtls){
            //Nếu có thì hiện hàng thông tin đĩa đó ra
            if(rent.getMaKh().trim().equals(makh)){                
                defTabMod.addRow(new Object[] {
                rent.getId(), rent.getMadia(), rent.getMaKh(), rent.getSlThue(), rent.getGia(), rent.getNgayThue(), rent.getNgayTra()
                });
                flag = true;
            }
        }
        //không tìm được thì thông báo cho người dùng 
        if(flag == false) this.txtThongBaoTra.setText("Không có đĩa nào hợp lệ!");
        
        this.rentDtls.clear();
    }
    
    /**reset table trả
     * @param 
     * @return 
     */
    public void resetTableTra(){
        this.defTabMod.setRowCount(0);
        this.rentDtls = this.rentService.getAllRentNotPay();
        
        for(RentDetails rent : this.rentDtls){
            defTabMod.addRow(new Object[] {
                rent.getId(), rent.getMadia(), rent.getMaKh(), rent.getSlThue(), rent.getGia(), rent.getNgayThue(), rent.getNgayTra()
            });
        }
        
        this.rentDtls.clear();
    }
    
    /**XỬ LÝ PHIẾU TRẢ KHI ẤN OK Ở DIALOG TRẢ
     * @param
     */
    public void getPhieuTra(){
        boolean flag = true;
        this.uID = new RandomCodeGenerator();
        payService = new PayService();
        rentDtls = this.rentService.getAllRentNotPay();
        Payment pm = new Payment();
        
        try{
            //Kiểm tra trường có bị trống không
            if(this.txtTra_ID.getText().equals("") || this.txtTra_PhuPhi.getText().equals("")){
                throw new BlankValueException("Thiếu thông tin!");
            }
            
            
            //lấy dữ liệu vào payment        
            
            pm.setPhuPhi(Integer.parseInt(this.txtTra_PhuPhi.getText())); 

            
                //kiểm tra xem mã phiếu thuê nhập vào có tồn tại không
                if(this.payService.checkIdRent(this.txtTra_ID.getText(), rentDtls)){
                    flag = false;
                    throw new InvalidIDException("Không tìm thấy phiếu thuê!");
                }
                this.idThue = this.txtTra_ID.getText(); 
                
            
            //Tạo mã phiếu trả và mã hóa đơn tự động
            this.pms = this.payService.getAllPay();
            do{
                pm.setMaPtra(RandomCodeGenerator.generateCode()); 
                
                for(Payment pay : this.pms){
                    if(pay.getMaPtra().trim().equals(pm.getMaPtra())){
                        flag = false;
                    }else{
                        flag = true;
                    }
                }
 
            }while(flag == false);
            
            do{
                pm.setMaHd(RandomCodeGenerator.generateCode()); 
 ;

                for(Payment pay : this.pms){
                    if(pay.getMaHd().trim().equals(pm.getMaPtra())){
                        flag = false;
                    }else{
                        flag = true;
                    }
                }
  
            }while(flag == false);

            
            this.rentDtls.clear();
        }catch(BlankValueException e){
            JOptionPane.showMessageDialog(this, e.toString());
        }catch(InvalidIDException e){
            JOptionPane.showMessageDialog(this, e.toString());
        }
        
        //Dòng này để xử lý khi người dùng nhập sai hay thiếu giá trị sẽ giữ nguyên dialog trả nếu đúng hết sẽ hỏi lại người dùng có chắc chắn không và đòng dialog, cập nhật bảng thuê.
        if(this.txtTra_ID.getText().equals("") || this.txtTra_PhuPhi.getText().equals("") || flag == false){
            this.txtThongBaoTra.setText("");
        }else{
            int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to save this change?");
            if(x == JOptionPane.YES_OPTION){
             this.countAffCol = this.payService.insertPay(pm, idThue, LoginService.getId());
            }
            this.dlgTra.dispose();
            setTableTra();
        }
    }
    
    public void setTableTra(){
        this.defTabMod.setRowCount(0);
        this.rentDtls = this.rentService.getAllRentNotPay();
                
        for(RentDetails rent : this.rentDtls){
            defTabMod.addRow(new Object[] {
                rent.getId(), rent.getMadia(), rent.getMaKh(), rent.getSlThue(), rent.getGia(), rent.getNgayThue(), rent.getNgayTra()
            });
        }
        this.rentDtls.clear();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOkTra;
    private javax.swing.JButton btnResetTra;
    private javax.swing.JButton btnRstThue;
    private javax.swing.JButton btnTK;
    private javax.swing.JButton btnThue;
    private javax.swing.JButton btnThue_Huy;
    private javax.swing.JButton btnThue_Luu;
    private javax.swing.JButton btnTimKiemThue;
    private javax.swing.JButton btnTra;
    private javax.swing.JDialog dlgThue;
    private javax.swing.JDialog dlgTra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblCD;
    private javax.swing.JLabel lblThue;
    private javax.swing.JLabel lblThue_MAKH;
    private javax.swing.JLabel lblThue_MaDia1;
    private javax.swing.JLabel lblThue_NgayTra1;
    private javax.swing.JLabel lblThue_SoLuong1;
    private javax.swing.JLabel lblTra;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlLayoutSize;
    private javax.swing.JPanel pnlLogo;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlNavigationBar;
    private javax.swing.JPanel pnlThue;
    private javax.swing.JPanel pnlThueProcess;
    private javax.swing.JPanel pnlThue_Them1;
    private javax.swing.JPanel pnlTra;
    private javax.swing.JPanel pnlTra_Them;
    private javax.swing.JSeparator sprtCD;
    private javax.swing.JPanel tabThue;
    private javax.swing.JPanel tabTra;
    private javax.swing.JTable tblThue;
    private javax.swing.JTable tblTra;
    private javax.swing.JTextField txtTKTra;
    private javax.swing.JLabel txtThongBaoThue;
    private javax.swing.JLabel txtThongBaoTra;
    private javax.swing.JTextField txtThue_MaDia;
    private javax.swing.JTextField txtThue_MaKH;
    private javax.swing.JTextField txtThue_NgayTra;
    private javax.swing.JTextField txtThue_SoLuong;
    private javax.swing.JTextField txtTimKiemThue;
    private javax.swing.JTextField txtTra_ID;
    private javax.swing.JTextField txtTra_PhuPhi;
    // End of variables declaration//GEN-END:variables

}
