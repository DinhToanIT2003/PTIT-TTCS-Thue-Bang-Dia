/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.main;

import Helper.CustomUUID;
import Helper.DateConfig;
import Helper.RandomCodeGenerator;
import control.BlankValueException;
import control.InvalidIDException;
import control.LoginService;
import control.PayService;
import control.RentService;
import dao.CustomerDao;
import dao.DiskDao;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.Disk;
import model.Payment;
import model.RentDetails;


/**
 *
 * @author vduct
 */
public class UI_Staff extends javax.swing.JFrame {
    
    Color lightBlue = new Color(204,204,255);
    
    private int countAffCol = 0;
    private String idThue;
    private RentService rentService = new RentService();
    private List<Disk> disks = new ArrayList<Disk>();
    private DefaultTableModel defTabMod = new DefaultTableModel();
    
    private LoginService login;
    private RandomCodeGenerator uID; 
    private RentDetails rentDt;
    private List<RentDetails> rentDtls = new ArrayList<>();
    private List<Payment> pms = null;
    private PayService payService = null;

    private DateConfig dcf = null;
    private List<Customer> customers = null;
    
    /**
     * Creates new form UI_Staff
     */
    public UI_Staff() {
        initComponents();
        
        
        pnlThue.setVisible(false);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgThue = new javax.swing.JDialog();
        pnlThue_Them1 = new javax.swing.JPanel();
        lblThue_MAKH = new javax.swing.JLabel();
        lblThue_MaDia1 = new javax.swing.JLabel();
        lblThue_SoLuong1 = new javax.swing.JLabel();
        lblThue_NgayTra1 = new javax.swing.JLabel();
        txtThue_MaKH = new javax.swing.JTextField();
        txtThue_MaDia = new javax.swing.JTextField();
        txtThue_SoLuong = new javax.swing.JTextField();
        btnThue_Luu = new javax.swing.JButton();
        txtThue_NgayTra = new com.toedter.calendar.JDateChooser();
        dlgTra = new javax.swing.JDialog();
        pnlTra_Them = new javax.swing.JPanel();
        btnOkTra = new javax.swing.JButton();
        txtTra_ID = new javax.swing.JTextField();
        txtTra_PhuPhi = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnThue_Huy = new javax.swing.JButton();
        dlgTheKH = new javax.swing.JDialog();
        pnlTheKH_Them = new javax.swing.JPanel();
        lblIdKH = new javax.swing.JLabel();
        txtIdKH = new javax.swing.JTextField();
        lblCccd = new javax.swing.JLabel();
        txtCccd = new javax.swing.JTextField();
        lblHoTen = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        lblGioiTinh = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        lblSDT = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        cmbGioiTinh = new javax.swing.JComboBox<>();
        dchNgaySinh = new com.toedter.calendar.JDateChooser();
        pnlLayoutSize = new javax.swing.JPanel();
        pnlNavigationBar = new javax.swing.JPanel();
        pnlLogo = new javax.swing.JPanel();
        lblCD = new javax.swing.JLabel();
        sprtCD = new javax.swing.JSeparator();
        pnlMenu = new javax.swing.JPanel();
        tabThue = new javax.swing.JPanel();
        lblThue = new javax.swing.JLabel();
        tabTra = new javax.swing.JPanel();
        lblTra = new javax.swing.JLabel();
        tabTheKH = new javax.swing.JPanel();
        lblTheKH = new javax.swing.JLabel();
        pnlContent = new javax.swing.JPanel();
        pnlThue = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThue = new javax.swing.JTable();
        pnlThueProcess = new javax.swing.JPanel();
        txtTimKiemThue = new javax.swing.JTextField();
        btnTimKiemThue = new javax.swing.JButton();
        btnThue = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnRstThue = new javax.swing.JButton();
        txtThongBaoThue = new javax.swing.JLabel();
        pnlTra = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtTKTra = new javax.swing.JTextField();
        btnTK = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        btnTra = new javax.swing.JButton();
        btnResetTra = new javax.swing.JButton();
        txtThongBaoTra = new javax.swing.JLabel();
        btnXuatHoaDon = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTra = new javax.swing.JTable();
        pnlTheKH = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblTheKH = new javax.swing.JTable();
        pnlTheKHProcess = new javax.swing.JPanel();
        txtTimKiemTheKH = new javax.swing.JTextField();
        btnTimKiemTheKH = new javax.swing.JButton();
        btnThemKH = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        btnRstTheKH = new javax.swing.JButton();
        txtThongBaoTheKH = new javax.swing.JLabel();

        dlgThue.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dlgThue.setTitle("Phiếu thuê");
        dlgThue.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        dlgThue.setResizable(false);
        dlgThue.setSize(new java.awt.Dimension(377, 300));

        pnlThue_Them1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlThue_Them1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblThue_MAKH.setText("Mã khách hàng:");
        pnlThue_Them1.add(lblThue_MAKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 90, -1));

        lblThue_MaDia1.setText("Mã đĩa:");
        pnlThue_Them1.add(lblThue_MaDia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 80, -1));

        lblThue_SoLuong1.setText("Số lượng:");
        pnlThue_Them1.add(lblThue_SoLuong1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 90, -1));

        lblThue_NgayTra1.setText("Ngày trả:");
        pnlThue_Them1.add(lblThue_NgayTra1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 80, -1));
        pnlThue_Them1.add(txtThue_MaKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 47, 149, -1));
        pnlThue_Them1.add(txtThue_MaDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 87, 149, -1));
        pnlThue_Them1.add(txtThue_SoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 148, -1));

        btnThue_Luu.setText("Save");
        btnThue_Luu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThue_LuuMouseClicked(evt);
            }
        });
        pnlThue_Them1.add(btnThue_Luu, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        txtThue_NgayTra.setDateFormatString("dd-MM-yyyy ");
        pnlThue_Them1.add(txtThue_NgayTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 150, -1));

        dlgThue.getContentPane().add(pnlThue_Them1, java.awt.BorderLayout.CENTER);

        dlgTra.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dlgTra.setBackground(new java.awt.Color(255, 255, 255));
        dlgTra.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        dlgTra.setResizable(false);
        dlgTra.setSize(new java.awt.Dimension(400, 217));

        pnlTra_Them.setBackground(new java.awt.Color(255, 255, 255));

        btnOkTra.setText("OK");
        btnOkTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOkTraMouseClicked(evt);
            }
        });

        jLabel1.setText("Mã phiếu thuê:");

        jLabel2.setText("Phụ phí:");

        javax.swing.GroupLayout pnlTra_ThemLayout = new javax.swing.GroupLayout(pnlTra_Them);
        pnlTra_Them.setLayout(pnlTra_ThemLayout);
        pnlTra_ThemLayout.setHorizontalGroup(
            pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTra_ThemLayout.createSequentialGroup()
                .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlTra_ThemLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTra_PhuPhi, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(txtTra_ID)))
                    .addGroup(pnlTra_ThemLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOkTra)))
                .addGap(78, 78, 78))
        );
        pnlTra_ThemLayout.setVerticalGroup(
            pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTra_ThemLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTra_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(pnlTra_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTra_PhuPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnOkTra)
                .addGap(32, 32, 32))
        );

        dlgTra.getContentPane().add(pnlTra_Them, java.awt.BorderLayout.LINE_START);

        btnThue_Huy.setText("Cancel");
        btnThue_Huy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThue_HuyMouseClicked(evt);
            }
        });

        dlgTheKH.setName("Thêm thẻ khách hàng"); // NOI18N
        dlgTheKH.setPreferredSize(new java.awt.Dimension(400, 410));
        dlgTheKH.setResizable(false);
        dlgTheKH.setSize(new java.awt.Dimension(400, 410));

        lblIdKH.setText("ID");

        txtIdKH.setText("123456");

        lblCccd.setText("CCCD");

        txtCccd.setText("080204001234");
        txtCccd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCccdActionPerformed(evt);
            }
        });

        lblHoTen.setText("Họ tên");

        txtHoTen.setText("Nguyễn Văn A");

        lblGioiTinh.setText("Giới tính");

        lblNgaySinh.setText("Ngày sinh");

        txtSDT.setText("0123456789");

        lblSDT.setText("Số điện thoại");

        txtEmail.setText("nva@gmail.com");

        lblEmail.setText("Email");

        txtDiaChi.setText("97 Man Thiện, phường Hiệp Phú, thành phố Thủ Đức, thành phố Hồ Chí Minh");

        jLabel10.setText("Địa chỉ");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        cmbGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        dchNgaySinh.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout pnlTheKH_ThemLayout = new javax.swing.GroupLayout(pnlTheKH_Them);
        pnlTheKH_Them.setLayout(pnlTheKH_ThemLayout);
        pnlTheKH_ThemLayout.setHorizontalGroup(
            pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnThem)
                    .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                        .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                        .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                        .addComponent(lblNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dchNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                        .addComponent(lblGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbGioiTinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                        .addComponent(lblHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                        .addComponent(lblCccd, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCccd, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                        .addComponent(lblIdKH, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdKH, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        pnlTheKH_ThemLayout.setVerticalGroup(
            pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTheKH_ThemLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdKH)
                    .addComponent(txtIdKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCccd)
                    .addComponent(txtCccd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHoTen)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGioiTinh)
                    .addComponent(cmbGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dchNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDT)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTheKH_ThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnThem)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        dlgTheKH.getContentPane().add(pnlTheKH_Them, java.awt.BorderLayout.PAGE_START);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("STAFF");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        pnlLayoutSize.setBackground(new java.awt.Color(102, 102, 255));

        pnlNavigationBar.setBackground(new java.awt.Color(102, 102, 255));
        pnlNavigationBar.setPreferredSize(new java.awt.Dimension(270, 500));
        pnlNavigationBar.setLayout(new java.awt.BorderLayout());

        pnlLogo.setBackground(new java.awt.Color(102, 102, 255));

        lblCD.setFont(new java.awt.Font("Script MT Bold", 3, 48)); // NOI18N
        lblCD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCD.setText("CD");

        sprtCD.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlLogoLayout = new javax.swing.GroupLayout(pnlLogo);
        pnlLogo.setLayout(pnlLogoLayout);
        pnlLogoLayout.setHorizontalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogoLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCD, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sprtCD, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLogoLayout.setVerticalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sprtCD, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCD, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pnlNavigationBar.add(pnlLogo, java.awt.BorderLayout.PAGE_START);

        pnlMenu.setBackground(new java.awt.Color(102, 102, 255));
        pnlMenu.setMaximumSize(new java.awt.Dimension(282, 392));
        pnlMenu.setName(""); // NOI18N
        pnlMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabThue.setBackground(new java.awt.Color(204, 204, 255));
        tabThue.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabThue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabThueMouseClicked(evt);
            }
        });

        lblThue.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblThue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThue.setText("Thuê sản phẩm");
        lblThue.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout tabThueLayout = new javax.swing.GroupLayout(tabThue);
        tabThue.setLayout(tabThueLayout);
        tabThueLayout.setHorizontalGroup(
            tabThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThue, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        tabThueLayout.setVerticalGroup(
            tabThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThue, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMenu.add(tabThue, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        tabTra.setBackground(new java.awt.Color(204, 204, 255));
        tabTra.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabTraMouseClicked(evt);
            }
        });

        lblTra.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTra.setText("Trả sản phẩm");
        lblTra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout tabTraLayout = new javax.swing.GroupLayout(tabTra);
        tabTra.setLayout(tabTraLayout);
        tabTraLayout.setHorizontalGroup(
            tabTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTra, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabTraLayout.setVerticalGroup(
            tabTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTra, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMenu.add(tabTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 91, -1, -1));

        tabTheKH.setBackground(new java.awt.Color(204, 204, 255));
        tabTheKH.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabTheKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabTheKHMouseClicked(evt);
            }
        });

        lblTheKH.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTheKH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTheKH.setText("Thẻ khách hàng");
        lblTheKH.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout tabTheKHLayout = new javax.swing.GroupLayout(tabTheKH);
        tabTheKH.setLayout(tabTheKHLayout);
        tabTheKHLayout.setHorizontalGroup(
            tabTheKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTheKHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTheKH, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabTheKHLayout.setVerticalGroup(
            tabTheKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTheKHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTheKH, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMenu.add(tabTheKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, -1));

        pnlNavigationBar.add(pnlMenu, java.awt.BorderLayout.LINE_END);

        pnlContent.setBackground(new java.awt.Color(204, 204, 255));
        pnlContent.setOpaque(false);
        pnlContent.setLayout(new java.awt.CardLayout());

        pnlThue.setBackground(new java.awt.Color(255, 255, 255));

        tblThue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblThue);

        pnlThueProcess.setBackground(new java.awt.Color(255, 255, 255));

        btnTimKiemThue.setText("Tìm Kiếm");
        btnTimKiemThue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiemThueMouseClicked(evt);
            }
        });

        btnThue.setText("Thuê");
        btnThue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThueMouseClicked(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(51, 0, 51));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnRstThue.setText("Reset");
        btnRstThue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRstThueActionPerformed(evt);
            }
        });

        txtThongBaoThue.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout pnlThueProcessLayout = new javax.swing.GroupLayout(pnlThueProcess);
        pnlThueProcess.setLayout(pnlThueProcessLayout);
        pnlThueProcessLayout.setHorizontalGroup(
            pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThueProcessLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiemThue, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiemThue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThueProcessLayout.createSequentialGroup()
                        .addComponent(txtThongBaoThue, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlThueProcessLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRstThue)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlThueProcessLayout.setVerticalGroup(
            pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThueProcessLayout.createSequentialGroup()
                .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThueProcessLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnThue)
                                .addComponent(btnRstThue))
                            .addGroup(pnlThueProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTimKiemThue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnTimKiemThue))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThongBaoThue)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlThueLayout = new javax.swing.GroupLayout(pnlThue);
        pnlThue.setLayout(pnlThueLayout);
        pnlThueLayout.setHorizontalGroup(
            pnlThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlThueProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );
        pnlThueLayout.setVerticalGroup(
            pnlThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThueLayout.createSequentialGroup()
                .addComponent(pnlThueProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
        );

        pnlContent.add(pnlThue, "card2");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnTK.setText("Tìm kiếm");
        btnTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTKMouseClicked(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnTra.setText("Trả");
        btnTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTraMouseClicked(evt);
            }
        });

        btnResetTra.setText("Reset");
        btnResetTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetTraMouseClicked(evt);
            }
        });

        txtThongBaoTra.setForeground(new java.awt.Color(255, 51, 51));

        btnXuatHoaDon.setText("Xuất hóa đơn");
        btnXuatHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXuatHoaDonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtThongBaoTra, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTKTra, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTK, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTra, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnResetTra, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXuatHoaDon)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnTra, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetTra, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXuatHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txtTKTra)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThongBaoTra)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        tblTra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblTra);

        javax.swing.GroupLayout pnlTraLayout = new javax.swing.GroupLayout(pnlTra);
        pnlTra.setLayout(pnlTraLayout);
        pnlTraLayout.setHorizontalGroup(
            pnlTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );
        pnlTraLayout.setVerticalGroup(
            pnlTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTraLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlContent.add(pnlTra, "card3");

        pnlTheKH.setBackground(new java.awt.Color(255, 255, 255));

        tblTheKH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblTheKH);

        pnlTheKHProcess.setBackground(new java.awt.Color(255, 255, 255));

        btnTimKiemTheKH.setText("Tìm Kiếm");
        btnTimKiemTheKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiemTheKHMouseClicked(evt);
            }
        });
        btnTimKiemTheKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemTheKHActionPerformed(evt);
            }
        });

        btnThemKH.setText("Thêm");
        btnThemKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemKHMouseClicked(evt);
            }
        });

        jSeparator4.setForeground(new java.awt.Color(51, 0, 51));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnRstTheKH.setText("Reset");
        btnRstTheKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRstTheKHActionPerformed(evt);
            }
        });

        txtThongBaoTheKH.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout pnlTheKHProcessLayout = new javax.swing.GroupLayout(pnlTheKHProcess);
        pnlTheKHProcess.setLayout(pnlTheKHProcessLayout);
        pnlTheKHProcessLayout.setHorizontalGroup(
            pnlTheKHProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTheKHProcessLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiemTheKH, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiemTheKH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTheKHProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTheKHProcessLayout.createSequentialGroup()
                        .addComponent(txtThongBaoTheKH, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlTheKHProcessLayout.createSequentialGroup()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThemKH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRstTheKH)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlTheKHProcessLayout.setVerticalGroup(
            pnlTheKHProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTheKHProcessLayout.createSequentialGroup()
                .addGroup(pnlTheKHProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTheKHProcessLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlTheKHProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlTheKHProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnThemKH)
                                .addComponent(btnRstTheKH))
                            .addGroup(pnlTheKHProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTimKiemTheKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnTimKiemTheKH))))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThongBaoTheKH)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlTheKHLayout = new javax.swing.GroupLayout(pnlTheKH);
        pnlTheKH.setLayout(pnlTheKHLayout);
        pnlTheKHLayout.setHorizontalGroup(
            pnlTheKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTheKHProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );
        pnlTheKHLayout.setVerticalGroup(
            pnlTheKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTheKHLayout.createSequentialGroup()
                .addComponent(pnlTheKHProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
        );

        pnlContent.add(pnlTheKH, "card2");

        javax.swing.GroupLayout pnlLayoutSizeLayout = new javax.swing.GroupLayout(pnlLayoutSize);
        pnlLayoutSize.setLayout(pnlLayoutSizeLayout);
        pnlLayoutSizeLayout.setHorizontalGroup(
            pnlLayoutSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayoutSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlNavigationBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        pnlLayoutSizeLayout.setVerticalGroup(
            pnlLayoutSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlNavigationBar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(pnlContent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlNavigationBar.getAccessibleContext().setAccessibleName("Menu");

        getContentPane().add(pnlLayoutSize, java.awt.BorderLayout.CENTER);
        pnlLayoutSize.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabThueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabThueMouseClicked
        pnlThue.setVisible(true);
        pnlTra.setVisible(false);
        pnlTheKH.setVisible(false);
        tabThue.setBackground(Color.white);
        tabTra.setBackground(lightBlue);
        tabTheKH.setBackground(lightBlue);
        this.defTabMod.setColumnCount(0);
        this.defTabMod.setRowCount(0);
        showThongTinThue();
    }//GEN-LAST:event_tabThueMouseClicked

    private void tabTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabTraMouseClicked
        pnlTra.setVisible(true);
        pnlThue.setVisible(false);
        pnlTheKH.setVisible(false);
        tabTra.setBackground(Color.white);        
        tabThue.setBackground(lightBlue);
        tabTheKH.setBackground(lightBlue);
        this.defTabMod.setColumnCount(0);
        this.defTabMod.setRowCount(0);
        showThongTinTra();
    }//GEN-LAST:event_tabTraMouseClicked

    private void btnThueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThueMouseClicked
        this.dlgThue.setLocationRelativeTo(this);
        this.dlgThue.setVisible(true);
        
    }//GEN-LAST:event_btnThueMouseClicked

    private void btnThue_HuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThue_HuyMouseClicked
        this.dcf = new DateConfig();
        this.txtThongBaoThue.setText(""+this.dcf.getDate(txtThue_NgayTra));
    }//GEN-LAST:event_btnThue_HuyMouseClicked

    private void btnTimKiemThueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemThueMouseClicked
        this.txtThongBaoThue.setText("");
        this.showTKDiskInfo(txtTimKiemThue.getText());
    }//GEN-LAST:event_btnTimKiemThueMouseClicked

    private void btnRstThueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRstThueActionPerformed
        resetTableThue();        
    }//GEN-LAST:event_btnRstThueActionPerformed

    private void btnThue_LuuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThue_LuuMouseClicked
        getRentForm();
        txtThongBaoThue.setText("Số dòng bị ảnh hưởng trên Csdl là "+ this.countAffCol + " !");
    }//GEN-LAST:event_btnThue_LuuMouseClicked

    private void btnTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTKMouseClicked
        this.txtThongBaoTra.setText("");
        this.showTKRentInfo(this.txtTKTra.getText());
    }//GEN-LAST:event_btnTKMouseClicked

    private void btnResetTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetTraMouseClicked
        resetTableTra();
    }//GEN-LAST:event_btnResetTraMouseClicked

    private void btnTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTraMouseClicked
        this.dlgTra.setLocationRelativeTo(this);
        this.dlgTra.setVisible(true);
    }//GEN-LAST:event_btnTraMouseClicked

    private void btnOkTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOkTraMouseClicked
        getPhieuTra(); 
        txtThongBaoTra.setText("Phiếu trả đã được lưu!");
    }//GEN-LAST:event_btnOkTraMouseClicked

    private void btnXuatHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatHoaDonMouseClicked
        xuatHoaDon();
        txtThongBaoTra.setText("Số dòng bị ảnh hưởng trên Csdl là "+ this.countAffCol + " !");
    }//GEN-LAST:event_btnXuatHoaDonMouseClicked

    private void tabTheKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabTheKHMouseClicked
        pnlTheKH.setVisible(true);
        pnlThue.setVisible(false);
        pnlTra.setVisible(false);
        tabTheKH.setBackground(Color.white);        
        tabThue.setBackground(lightBlue);
        tabTra.setBackground(lightBlue);
        this.defTabMod.setColumnCount(0);
        this.defTabMod.setRowCount(0);
        showThongTinTheKH();
    }//GEN-LAST:event_tabTheKHMouseClicked

    private void btnTimKiemTheKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemTheKHMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiemTheKHMouseClicked

    private void btnThemKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemKHMouseClicked
        // TODO add your handling code here:
        this.dlgTheKH.setLocationRelativeTo(this);
        this.dlgTheKH.setVisible(true);
    }//GEN-LAST:event_btnThemKHMouseClicked

    private void btnRstTheKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRstTheKHActionPerformed
        // TODO add your handling code here:
        resetTableTheKH();
    }//GEN-LAST:event_btnRstTheKHActionPerformed

    private void btnTimKiemTheKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemTheKHActionPerformed
        // TODO add your handling code here:
        this.showTKCustInfo(txtTimKiemTheKH.getText());
    }//GEN-LAST:event_btnTimKiemTheKHActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        themKhachHang();
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtCccdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCccdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCccdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI_Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI_Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI_Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI_Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI_Staff().setVisible(true);
            }
        });
    }
    /**HIỆN BẢNG DANH SÁCH ĐĨA SẴN SÀNG
     * @params NONE
    */
    public void showThongTinThue(){
        
        this.tblThue.setModel(defTabMod);
        
        this.disks = this.rentService.getAllDisk();
        
        defTabMod.addColumn("Mã đĩa");
        defTabMod.addColumn("Tên đĩa");
        defTabMod.addColumn("Loại");
        defTabMod.addColumn("Số lượng");
        defTabMod.addColumn("Giá thuê");
        
        for(Disk disk : disks){
            defTabMod.addRow(new Object[] {
                disk.getMa(), disk.getTen(), disk.getLoai(), disk.getSoluong(), disk.getGia()
            });
        }
        
    }
    
    /**HIỆN THÔNG TIN ĐĨA TÌM KIẾM
     * @param tenDia
     * @params String 
    */
    public void showTKDiskInfo(String tenDia){
        this.defTabMod.setRowCount(0);
        boolean flag = false;
        
        //Kiểm tra tên đĩa có tồn tại không
        for(Disk disk : this.disks){

            //Nếu có thì hiện hàng thông tin đĩa đó ra
            if(disk.getTen().trim().equals(tenDia)){                
                defTabMod.addRow(new Object[] {
                disk.getMa(), disk.getTen(), disk.getLoai(), disk.getSoluong(), disk.getGia()
                });
                flag = true;
            }
        }
        //không tìm được thì thông báo cho người dùng 
        if(flag == false) this.txtThongBaoThue.setText("Không có đĩa nào hợp lệ!");
    }
    
    /**NHẬP PHIẾU THUÊ
     * @params NONE
    */
    public void getRentForm(){
        boolean flag = true;
        rentDt = new RentDetails();
        customers = new ArrayList<>(); //Để check có viết sai mã khách hàng không
        this.customers = this.rentService.getAllCust();
        this.uID = new RandomCodeGenerator();
        this.dcf = new DateConfig();
        
        try{
            //Kiểm tra các trường có bị trống không
            if(txtThue_MaKH.getText().equals("") || txtThue_MaDia.getText().equals("") || txtThue_SoLuong.getText().equals("") || 
                    this.dcf.getDate(txtThue_NgayTra).equals("")){
                throw new BlankValueException("Thiếu thông tin!");
            }
            
            //Kiểm tra mã id thuê sinh ra có trùng không và tạo mới mã nếu trùng 
            this.rentDtls = this.rentService.getAllRent();
            do{
                this.idThue = RandomCodeGenerator.generateCode();
                

                for(RentDetails rent : rentDtls){
                    flag = !rent.getId().equals(idThue);
                }
               
            }while(flag == false);
            
            this.rentDtls.clear();
            

            
            //lấy dữ liệu vào rent details
            if(this.rentService.check_InvalidDisk(this.txtThue_MaDia.getText())){
                rentDt.setMadia(txtThue_MaDia.getText()); 
            }else{
                throw new InvalidIDException("Không tồn tại đĩa!");
            }
                       
            rentDt.setSlThue(Integer.parseInt(this.txtThue_SoLuong.getText()));
            System.out.println(this.dcf.getDate(txtThue_NgayTra));
            rentDt.setNgayTra(this.dcf.getDate(txtThue_NgayTra));
            
            
            //kiểm tra xem mã khách hàng nhập vào có tồn tại không
            if(!this.rentService.chkIDCustomer(this.txtThue_MaKH.getText(), customers)){
                flag = false;    
                throw new InvalidIDException("Không tìm thấy khách hàng!");    
            }
            //Nếu có thì thêm mã khách hàng
            rentDt.setMaKh(this.txtThue_MaKH.getText());        
            this.customers.clear();            
        }catch(BlankValueException e){
            JOptionPane.showMessageDialog(this, e.toString());
        }catch(InvalidIDException e){
            JOptionPane.showMessageDialog(this, e.toString());
        }
        
        //Dòng này để xử lý khi người dùng nhập sai hay thiếu giá trị sẽ giữ nguyên dialog thuê nếu đúng hết sẽ hỏi lại người dùng có chắc chắn không và đòng dialog, cập nhật bảng đĩa.
        if(txtThue_MaKH.getText().equals("") || txtThue_MaDia.getText().equals("") || txtThue_SoLuong.getText().equals("") || 
                    this.dcf.getDate(txtThue_NgayTra).equals("") || flag == false){
            this.txtThongBaoThue.setText("");
        }else{
            int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to save this change?");
            if(x == JOptionPane.YES_OPTION){
                this.countAffCol = this.rentService.insertRent(rentDt, LoginService.getId(), idThue);
            }
            this.dlgThue.dispose();
            setTableThue();
        }
      
    }
    
    /**reset table thuê
     * @param 
     * @return 
     */
    public void resetTableThue(){
        this.defTabMod.setRowCount(0);
//        this.txtThongBao.setText("");
        for(Disk disk : disks){
            defTabMod.addRow(new Object[] {
                disk.getMa(), disk.getTen(), disk.getLoai(), disk.getSoluong(), disk.getGia()
            });
        }
    }
    
    public void setTableThue(){
        this.defTabMod.setRowCount(0);
        this.disks = this.rentService.getAllDisk();
        for(Disk disk : disks){
            defTabMod.addRow(new Object[] {
                disk.getMa(), disk.getTen(), disk.getLoai(), disk.getSoluong(), disk.getGia()
            });
        }
    }
    
    
    /**Hiện bảng danh sách phiếu thuê
     * @param 
     */
    public void showThongTinTra(){
        
        this.tblTra.setModel(defTabMod);
        
        this.rentDtls = this.rentService.getAllRentNotPay();
        
        defTabMod.addColumn("Mã phiếu thuê");
        defTabMod.addColumn("Mã đĩa");
        defTabMod.addColumn("Mã khách hàng");
        defTabMod.addColumn("Số lượng thuê");
        defTabMod.addColumn("Giá thuê");
        defTabMod.addColumn("Ngày thuê");
        defTabMod.addColumn("Ngày trả");
        
        for(RentDetails rent : this.rentDtls){
            defTabMod.addRow(new Object[] {
                rent.getId(), rent.getMadia(), rent.getMaKh(), rent.getSlThue(), rent.getGia(), rent.getNgayThue(), rent.getNgayTra()
            });
        }
        this.rentDtls.clear();
    }
    
    /**HIỆN THÔNG TIN PHIẾU THUÊ CẦN TÌM
     * @param makh
     * @params String 
    */
    public void showTKRentInfo(String makh){
        this.defTabMod.setRowCount(0);
        boolean flag = false;
        this.rentDtls = this.rentService.getAllRentNotPay();
        
        //Kiểm tra tên đĩa có tồn tại không
        for(RentDetails rent : this.rentDtls){
            //Nếu có thì hiện hàng thông tin đĩa đó ra
            if(rent.getMaKh().trim().equals(makh)){                
                defTabMod.addRow(new Object[] {
                rent.getId(), rent.getMadia(), rent.getMaKh(), rent.getSlThue(), rent.getGia(), rent.getNgayThue(), rent.getNgayTra()
                });
                flag = true;
            }
        }
        //không tìm được thì thông báo cho người dùng 
        if(flag == false) this.txtThongBaoTra.setText("Không có đĩa nào hợp lệ!");
        
        this.rentDtls.clear();
    }
    
    /**reset table trả
     * @param 
     * @return 
     */
    public void resetTableTra(){
        this.defTabMod.setRowCount(0);
        this.rentDtls = this.rentService.getAllRentNotPay();
        
        for(RentDetails rent : this.rentDtls){
            defTabMod.addRow(new Object[] {
                rent.getId(), rent.getMadia(), rent.getMaKh(), rent.getSlThue(), rent.getGia(), rent.getNgayThue(), rent.getNgayTra()
            });
        }
        
        this.rentDtls.clear();
    }
    
    /**XỬ LÝ PHIẾU TRẢ KHI ẤN OK Ở DIALOG TRẢ
     * @param
     */
    public void getPhieuTra(){
        boolean flag = true;
        payService = new PayService();
        rentDtls = this.rentService.getAllRentNotPay();
        Payment pm = new Payment();
        pms = new ArrayList<>();
        List<Payment> pays = new ArrayList<>();
        pays = this.payService.getAllPay();
        
        try{
            //Kiểm tra trường có bị trống không
            if(this.txtTra_ID.getText().equals("") || this.txtTra_PhuPhi.getText().equals("")){
                throw new BlankValueException("Thiếu thông tin!");
            }
            
            
            //lấy dữ liệu vào payment(phiếu trả)        
            
            pm.setPhuPhi(Integer.parseInt(this.txtTra_PhuPhi.getText())); 

            
                //kiểm tra xem mã phiếu thuê nhập vào có tồn tại không
                if(this.payService.checkIdRent(this.txtTra_ID.getText(), rentDtls)){
                    flag = false;
                    throw new InvalidIDException("Không tìm thấy phiếu thuê!");
                }
                this.idThue = this.txtTra_ID.getText(); 
                
            
            //Tạo mã phiếu trả tự động
            pays = this.payService.getAllPay();
            do{
                pm.setMaPtra(RandomCodeGenerator.generateCode()); 
                
                for(Payment pay : pays){
                    flag = !pay.getMaPtra().trim().equals(pm.getMaPtra());
                }
 
            }while(flag == false);      
           
            //Thêm phiếu trả vào danh sách phiếu trả
            pms.add(pm);
            
            //Giải phóng đối tượng pm
            pm = null;
            
            this.rentDtls.clear();
        }catch(BlankValueException e){
            JOptionPane.showMessageDialog(this, e.toString());
        }catch(InvalidIDException e){
            JOptionPane.showMessageDialog(this, e.toString());
        }
        
        //Dòng này để xử lý khi người dùng nhập sai hay thiếu giá trị sẽ giữ nguyên dialog trả nếu đúng hết sẽ hỏi lại người dùng có chắc chắn không và đòng dialog, cập nhật bảng thuê.
        if(this.txtTra_ID.getText().equals("") || this.txtTra_PhuPhi.getText().equals("") || flag == false){
            this.txtThongBaoTra.setText("");
        }else{
            int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to save this change?");
            if(x == JOptionPane.YES_OPTION){
             
            }
            this.dlgTra.dispose();
            setTableTra();
        }
    }
    
    public void setTableTra(){
        this.defTabMod.setRowCount(0);
        this.rentDtls = this.rentService.getAllRentNotPay();
                
        for(RentDetails rent : this.rentDtls){
            defTabMod.addRow(new Object[] {
                rent.getId(), rent.getMadia(), rent.getMaKh(), rent.getSlThue(), rent.getGia(), rent.getNgayThue(), rent.getNgayTra()
            });
        }
        this.rentDtls.clear();
    }
    
    public void xuatHoaDon(){
        boolean flag = true;
        String mahd;
        List<Payment> pays = new ArrayList<>();
        pays = this.payService.getAllPay();
        
        //Tạo mã hóa đơn tự động
        do{
                mahd = RandomCodeGenerator.generateCode();

                for(Payment pay : pays){
                    flag = !pay.getMaHd().trim().equals(mahd.trim());
                }
  
            }while(flag == false);
        
        //Chạy for để nhập phiếu trả cùng hóa đơn vào CSDL
        for(Payment pay : this.pms){
            pay.setMaHd(mahd);
           this.countAffCol = this.payService.insertPay(pay, idThue, LoginService.getId()); 
        }
        
    }
    
    public void setBtnThue(){
        this.txtThue_MaDia.setText("");
        this.txtThue_MaKH.setText("");        
        this.txtThue_SoLuong.setText("");
    }
    
    /**HIỆN BẢNG DANH SÁCH THẺ KHÁCH HÀNG
     * @params NONE
    */
    public void showThongTinTheKH(){
        
        this.tblTheKH.setModel(defTabMod);
                
        this.customers = this.rentService.getAllCust();
        
        defTabMod.addColumn("Mã khách hàng");
        defTabMod.addColumn("Căn cước công dân");
        defTabMod.addColumn("Họ tên");
        defTabMod.addColumn("Giới tính");
        defTabMod.addColumn("Ngày sinh");
        defTabMod.addColumn("Số điện thoại");
        defTabMod.addColumn("Email");
        defTabMod.addColumn("Địa chỉ");
        
        for(Customer customer : customers){
            defTabMod.addRow(new Object[] {
                customer.getMakh(), customer.getCccd(), customer.getHoten(), customer.getGioitinh(),
                customer.getNgaysinh(), customer.getSdt(), customer.getEmail(), customer.getDiachi()
            });
        }
        
    }
    
    public void showTKCustInfo(String cccd){
        this.defTabMod.setRowCount(0);
        boolean flag = false;
        
        //Kiểm tra cccd có tồn tại không
        for(Customer customer : this.customers){

            //Nếu có thì hiện hàng thông tin khách hàng
            if(customer.getCccd().trim().equals(cccd)){                
                defTabMod.addRow(new Object[] {
                customer.getMakh(), customer.getCccd(), customer.getHoten(), customer.getGioitinh(),
                customer.getNgaysinh(), customer.getSdt(), customer.getEmail(), customer.getDiachi()
                });
                flag = true;
            }
        }
        //không tìm được thì thông báo cho người dùng 
        if(flag == false) this.txtThongBaoThue.setText("Không có đĩa nào hợp lệ!");
    }
    
    public void resetTableTheKH(){
        this.defTabMod.setRowCount(0);
        this.customers = this.rentService.getAllCust();
        for(Customer customer : customers){
            defTabMod.addRow(new Object[] {
                customer.getMakh(), customer.getCccd(), customer.getHoten(), customer.getGioitinh(),
                customer.getNgaysinh(), customer.getSdt(), customer.getEmail(), customer.getDiachi()
            });
        }
    }
    
    // Thêm khách hàng
    public void themKhachHang() {
        this.dcf = new DateConfig();
        
        try {
            if (this.txtIdKH.getText().equals("")) {
                throw new BlankValueException("Mã khách hàng không được để trống!");
            } else if (this.txtCccd.getText().equals("")) {
                throw new BlankValueException("Căn cước công dân không được để trống!");
            } else if (this.txtHoTen.getText().equals("")) {
                throw new BlankValueException("Họ và tên không được để trống!");
            } else if (this.txtHoTen.getText().equals("")) {
                throw new BlankValueException("Họ và tên không được để trống!");
            }
            
            Customer cust = new Customer();
            cust.setMakh(txtIdKH.getText());
            cust.setCccd(txtCccd.getText());
            cust.setHoten(txtHoTen.getText());
            cust.setGioitinh((String) cmbGioiTinh.getSelectedItem());
            cust.setNgaysinh(this.dcf.getDate(dchNgaySinh));
            cust.setSdt(txtSDT.getText());
            cust.setEmail(txtEmail.getText());
            cust.setDiachi(txtDiaChi.getText());
            
            System.out.println("I'm here!");
            String manv = LoginService.getId();
            
            int x = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn thêm khách hàng?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            System.out.println("x= " + x);
            System.out.println("Equal?" + JOptionPane.YES_OPTION);
            CustomerDao.addNewCustomer(cust, manv);
            
            if (x == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công!");
                this.dlgTheKH.dispose();
                resetTableTheKH();
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOkTra;
    private javax.swing.JButton btnResetTra;
    private javax.swing.JButton btnRstTheKH;
    private javax.swing.JButton btnRstThue;
    private javax.swing.JButton btnTK;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemKH;
    private javax.swing.JButton btnThue;
    private javax.swing.JButton btnThue_Huy;
    private javax.swing.JButton btnThue_Luu;
    private javax.swing.JButton btnTimKiemTheKH;
    private javax.swing.JButton btnTimKiemThue;
    private javax.swing.JButton btnTra;
    private javax.swing.JButton btnXuatHoaDon;
    private javax.swing.JComboBox<String> cmbGioiTinh;
    private com.toedter.calendar.JDateChooser dchNgaySinh;
    private javax.swing.JDialog dlgTheKH;
    private javax.swing.JDialog dlgThue;
    private javax.swing.JDialog dlgTra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblCD;
    private javax.swing.JLabel lblCccd;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblIdKH;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTheKH;
    private javax.swing.JLabel lblThue;
    private javax.swing.JLabel lblThue_MAKH;
    private javax.swing.JLabel lblThue_MaDia1;
    private javax.swing.JLabel lblThue_NgayTra1;
    private javax.swing.JLabel lblThue_SoLuong1;
    private javax.swing.JLabel lblTra;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlLayoutSize;
    private javax.swing.JPanel pnlLogo;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlNavigationBar;
    private javax.swing.JPanel pnlTheKH;
    private javax.swing.JPanel pnlTheKHProcess;
    private javax.swing.JPanel pnlTheKH_Them;
    private javax.swing.JPanel pnlThue;
    private javax.swing.JPanel pnlThueProcess;
    private javax.swing.JPanel pnlThue_Them1;
    private javax.swing.JPanel pnlTra;
    private javax.swing.JPanel pnlTra_Them;
    private javax.swing.JSeparator sprtCD;
    private javax.swing.JPanel tabTheKH;
    private javax.swing.JPanel tabThue;
    private javax.swing.JPanel tabTra;
    private javax.swing.JTable tblTheKH;
    private javax.swing.JTable tblThue;
    private javax.swing.JTable tblTra;
    private javax.swing.JTextField txtCccd;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtIdKH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTKTra;
    private javax.swing.JLabel txtThongBaoTheKH;
    private javax.swing.JLabel txtThongBaoThue;
    private javax.swing.JLabel txtThongBaoTra;
    private javax.swing.JTextField txtThue_MaDia;
    private javax.swing.JTextField txtThue_MaKH;
    private com.toedter.calendar.JDateChooser txtThue_NgayTra;
    private javax.swing.JTextField txtThue_SoLuong;
    private javax.swing.JTextField txtTimKiemTheKH;
    private javax.swing.JTextField txtTimKiemThue;
    private javax.swing.JTextField txtTra_ID;
    private javax.swing.JTextField txtTra_PhuPhi;
    // End of variables declaration//GEN-END:variables

}
